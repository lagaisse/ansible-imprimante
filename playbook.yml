#!/usr/bin/env ansible-playbook
---
- name: Installer le système d'imprimante sur raspberry
  hosts: berry1
  gather_facts: yes
  remote_user: pi
  remote_pass: raspberry
  vars:
    user: roberto
    wifi:
      ssid: "wifi ssid"
      #password: PASSWORD
    packages_to_install: [ cups, libcups2-dev, libcupsfilters-dev, libcupsimage2-dev 
        ]
    pip_packages_to_install: [ xxx ]
    npm_packages_to_install: [ xxx]
    update_cache: no
  sudo: yes
  tasks:
    - name: put wifi config in place
      template: src=templates/wpa_supplicant.conf.j2 dest=/etc/wpa_supplicant/wpa_supplicant.conf
      notify: reboot

    - name: expand SD card with rasp-config/1 option

    - name: gpu memory
      #regexp: "^#?gpu_mem"
      #line: "gpu_mem=16"
    - name: désactiver hdmi

    - name: max current on usb
      #regexp: "^#?max_usb_current"
      #line: "max_usb_current=1"

    - name: update and upgrade
      apt: update_cache=yes upgrade=dist

    - name: "add user {{ user }}"
      #become: yes
      user: name={{ user }} comment="admin" shell=/usr/bin/sh state=present

    - name: add credential
      when: user is defined
      authorized_key: user={{ user }} key="{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
      become: yes

    - name: "make user {{ user }} sudo"
      #become: yes
      when: user is defined
      template: src=templates/sudoers/j2 dest=/etc/sudoers.d/{{ user }}-sudoer validate='visudo -cf %s'

    - name: "make user {{ user }} lpadmin"
      #become: yes
      when: user is defined
      user: name={{ user }} groups=lpadmin append=yes

    - name: delete user pi
      when: user is defined
      #user: name=pi state=absent remove=yes
    
    - name: redemarrage
      notify: reboot

    - name: remove default user
      when: "user != remote_user"
      user: name={{ remote_user }} state=absent force=yes
      async: 0
      poll: 0
      ignore_errors: True

    # - name: "installer cups et autres avec le user {{ user }}"
    #   apt: pkg={{ item }} state=installed update_cache={{ update_cache }}
    #   with_items: packages_to_install
    #   become: yes


# Editer la conf de cups
# sudo nano /etc/cups/cupsd.conf
#    Listen localhost:631 devient Port 631
#  autoriser le réseau local : cf google doc

# redemarrer cups
# sudo /etc/init.d/cups restart


    - name: télécharger driver kodak
      command: curl -L http://downloads.sourceforge.net/project/cupsdriverkodak/c2esp-27.tar.gz


  handlers:
    - name: reboot
      command: shutdown -r now "Ansible updates triggered"
      #command: ls -lah ./ 
      async: 0
      poll: 0
      ignore_errors: True
      notify:
       - wait for reboot

    - name: wait for reboot
      local_action: wait_for host={{ inventory_hostname }}
                    state=started
                    timeout=30 # doesn't appear to work correctly now, instead a simple delay is imposed - that's fine for now
      sudo: false

